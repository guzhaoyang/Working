#pragma checksum "F:\参与的项目\Working\Views\User\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dc0bac344b7f8bce77f7f4081c1b5ec1583a4911"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Index), @"mvc.1.0.view", @"/Views/User/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\参与的项目\Working\Views\_ViewImports.cshtml"
using Working;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\参与的项目\Working\Views\_ViewImports.cshtml"
using Working.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc0bac344b7f8bce77f7f4081c1b5ec1583a4911", @"/Views/User/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38f44a5eefebf09a29b5c8a0862c53dc29ae9dab", @"/Views/_ViewImports.cshtml")]
    public class Views_User_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("item in items"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("item.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\参与的项目\Working\Views\User\Index.cshtml"
   ViewData["Title"] = "用户管理"; 

#line default
#line hidden
#nullable disable
            DefineSection("css", async() => {
                WriteLiteral("\n    <style>\n        [v-cloak] {\n            display: none;\n        }\n    </style>\n");
            }
            );
            WriteLiteral(@"<div class=""row"">
    <div class=""panel panel-default"" style=""margin-bottom:-10px;"">
        <div class=""panel-heading"">
            <h3 class=""panel-title"">用户管理</h3>
        </div>
        <div class=""panel-body"">
            <div class=""row"">
                <div class=""col-md-3"">
                    <select id=""departmentselect"" class=""form-control"" v-cloak v-model=""selected"" v-on:change=""ChangeDepartment"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dc0bac344b7f8bce77f7f4081c1b5ec1583a49114466", async() => {
                WriteLiteral("{{item.departmentname}}");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </select>
                </div>
                <div class=""col-md-6"">
                </div>
                <div class=""col-md-3"" style=""text-align:right"">
                    <button type=""button"" class=""btn btn-success"" data-toggle=""modal"" data-target=""#AddModal"">
                        添加
                    </button>
                </div>
            </div>
            <div class=""row"" style=""margin-bottom:-10px;margin-top:10px;"">
                <div class=""col-md-12"">
                    <table class=""table table-bordered table-hover  table-condensed table-striped"">
                        <thead>
                            <tr>
                                <th style=""width:50px;"">编号</th>
                                <th>用户名</th>
                                <th>姓名</th>
                                <th>角色</th>
                                <th style=""width:90px;""></th>
                            </tr>
                        </thead>
                        <tbo");
            WriteLiteral(@"dy id=""usertr""></tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>

<div class=""modal fade"" id=""ModiyModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"" id=""edituser"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">&times;</span><span class=""sr-only"">关闭</span></button>
                <h4 class=""modal-title"" id=""modeltitle"">修改用户</h4>
            </div>
            <div class=""modal-body"">
                <div class=""row"" style=""margin-top:10px;"">
                    <div class=""col-md-6"">
                        <input type=""text"" class=""form-control"" v-model=""user.name"" placeholder=""姓名"">
                    </div>
                    <div class=""col-md-6"">
                        <input type=""text"" class=""form-control"" v-model=""user.username"" placeholder=""用户名"">");
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"" style=""margin-top:10px;"">
                    <div class=""col-md-6"">
                        <select id=""roleselect"" class=""form-control"" v-cloak>
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dc0bac344b7f8bce77f7f4081c1b5ec1583a49118073", async() => {
                WriteLiteral("{{item.rolename}}");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-md-6"">

                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-success"" v-on:click=""savaUser"">
                    保存
                </button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">关闭</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""AddModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">&times;</span><span class=""sr-only"">关闭</span></button>
                <h4 class=""modal-title"">修改用户</h4>
            </div>
            <div class=""modal-body"">
                <div class=""row"" style=""margin-top:10px;"">
 ");
            WriteLiteral(@"                   <div class=""col-md-6"">
                        <input type=""text"" class=""form-control"" id=""adddepartmentname"" disabled=""disabled"">

                    </div>
                    <div class=""col-md-6"">
                        <select id=""addroleselect"" class=""form-control"" v-cloak>
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dc0bac344b7f8bce77f7f4081c1b5ec1583a491110657", async() => {
                WriteLiteral("{{item.rolename}}");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                    </div>
                </div>
                <div class=""row"" style=""margin-top:10px;"">
                    <div class=""col-md-6"">
                        <input type=""text"" class=""form-control"" id=""addname"" placeholder=""姓名"">
                    </div>
                    <div class=""col-md-6"">
                        <input type=""text"" class=""form-control"" id=""addusername"" placeholder=""用户名"">
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-success"" onclick=""SavaAdd()"">
                    保存
                </button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">关闭</button>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <!--tr模版-->
    <script type=""text/x-template"" id=""user-tr"">
        <tr v-bind:id=""'tr_'+user.id"">
            <td>{{user.id}}</td>
            <td>{{user.name}}</td>
            <td>{{user.username}}</td>
            <td>{{user.rolename}}</td>
            <td>
                <button class=""btn btn-success btn-xs"" v-on:click=""editClick"">编辑</button>
                <button class=""btn btn-danger btn-xs"" v-on:click=""removeClick"">删除</button>
            </td>
        </tr>
    </script>
    <script>function SavaAdd() {
            $.ajax({
                method: ""POST"",
                url: '/User/adduser',
                data: {
                    name: $(""#addname"").val(),
                    username: $(""#addusername"").val(),
                    roleid: $(""#addroleselect"").val(),
                    departmentid: $(""#departmentselect"").val()
                },
                success: function (backData) {
                    if (backData.result == 1) {
                        $(""#ModiyModal"").modal(");
                WriteLiteral(@"'hide');
                        window.location = ""/user/index""
                    }
                    else {
                        alert(backData.message);
                    }
                },
                error: function (error) {
                    alert(error.statusText)
                }
            })
        }
        //用户组件
        Vue.component(""user-row"", {
            props: [""user""],
            template: '#user-tr',
            methods: {
                editClick: function () {
                    this.$emit('edituser', this.user)
                },
                removeClick: function () {
                    this.$emit('removeuser', this.user)
                }
            }
        })

        //部门Vue
        var departmentVue = null;
        var editVue = null;
        var roleVue = null;
        //加载部门
        function LoadDepartment() {
            $.ajax({
                method: ""GET"",
                url: '/Departments/getalldepartment',
                data: {
          ");
                WriteLiteral(@"      },
                success: function (backData) {
                    if (backData.result == 1) {
                        if (departmentVue == null) {
                            departmentVue = new Vue({
                                el: '#departmentselect',
                                data: {
                                    selected: (backData.data.length > 0 ? backData.data[0].id : 0),
                                    items: backData.data
                                },
                                methods: {
                                    ChangeDepartment: function () {
                                        $(""#adddepartmentname"").val($(""#departmentselect"").find(""option:selected"").text());
                                        LoadUser(this.selected);
                                    }
                                }
                            })
                            $(""#adddepartmentname"").val($(""#departmentselect"").find(""option:selected"").text());
         ");
                WriteLiteral(@"               }
                        else {
                            if (backData.data.length > 0) {
                                departmentVue.selected = backData.data[0].id
                            }
                            departmentVue.items = backData.data;
                        }
                        LoadUser(departmentVue.selected);
                    } else {
                        alert(backData.message);
                    }
                },
                error: function (error) {
                    alert(error.statusText)
                }
            })
        }
        //加载角色
        function LoadRole() {
            $.ajax({
                method: ""GET"",
                url: '/User/roles',
                data: {
                },
                success: function (backData) {
                    if (backData.result == 1) {
                        roleVue = new Vue({
                            el: '#roleselect',
                            data: {
              ");
                WriteLiteral(@"                  items: backData.data
                            }
                        })
                        $(""#roleselect"").attr(""v-model"", ""roleid"")
                    } else {
                        alert(backData.message);
                    }
                },
                error: function (error) {
                    alert(error.statusText)
                }
            })
        }
        //加载要添加的角色
        function LoadAddRole() {
            $.ajax({
                method: ""GET"",
                url: '/User/roles',
                data: {
                },
                success: function (backData) {
                    if (backData.result == 1) {
                        roleVue = new Vue({
                            el: '#addroleselect',
                            data: {
                                items: backData.data
                            }
                        })
                    } else {
                        alert(backData.message);
                 ");
                WriteLiteral(@"   }
                },
                error: function (error) {
                    alert(error.statusText)
                }
            })
        }
        //加载用户
        function LoadUser(departmentID) {
            $(""#usertr"").html('<tr is=""user-row"" v-for=""user in users"" v-on:edituser=""edituser"" v-on:removeuser=""removeuser"" v-bind:user=""user""></tr>');
            $.ajax({
                method: ""GET"",
                url: '/User/userroles',
                data: {
                    departmentID: departmentID
                },
                success: function (backData) {
                    if (backData.result == 1) {
                        new Vue({
                            el: ""#usertr"",
                            data: {
                                users: backData.data
                            },
                            methods: {
                                edituser: function (user) {
                                    UserEdit(user);
                                },
 ");
                WriteLiteral(@"                               removeuser: function (user) {
                                    UserRemove(user);
                                }
                            }
                        });

                    } else {
                        alert(backData.message);
                    }
                },
                error: function (error) {
                    alert(error.statusText)
                }
            })

        }
        //绑定新工作记录编辑
        function UserEdit(user) {
            if (editVue == null) {
                editVue = new Vue({
                    el: ""#edituser"",
                    data: {
                        roleid: user.roleid,
                        user: user
                    },
                    methods: {
                        savaUser: function () {
                            this.user.roleid = $(""#roleselect"").val();
                            $.ajax({
                                method: ""PUT"",
                                url: '/U");
                WriteLiteral(@"ser/modifyuser',
                                data: {
                                    user: this.user
                                },
                                success: function (backData) {
                                    if (backData.result == 1) {

                                    } else {
                                        alert(backData.message);
                                    }
                                    $(""#ModiyModal"").modal('hide');
                                },
                                error: function (error) {
                                    alert(error.statusText)
                                }
                            })
                        }
                    },
                    watch: {
                        roleid: function (newroleid) {
                            this.user.roleid = newroleid;
                            this.user.rolename = $(""#roleselect"").find(""option:selected"").text();
                        }
   ");
                WriteLiteral(@"                 }
                });
            }
            else {
                editVue.user = user;
            }
            $(""#ModiyModal"").modal('show');
            //显示用户默认的角色
            roleVue.selected = user.roleid;
            $(""#roleselect"").val(user.roleid);
        }

        //绑定新工作记录删除
        function UserRemove(user) {
            if (confirm(""确定要删除："" + user.name + ""?"")) {
                $.ajax({
                    method: ""DELETE"",
                    url: '/User/removeuser',
                    data: {
                        userID: user.id
                    },
                    success: function (backData) {
                        if (backData.result == 1) {
                            $(""#tr_"" + user.id).remove();
                            alert(""删除成功！"")
                        } else {
                            alert(backData.message);
                        }
                    },
                    error: function (error) {
                        alert(error.");
                WriteLiteral("statusText)\n                    }\n                })\n            }\n        }\n        $(function () {\n            LoadRole();\n            LoadAddRole();\n            LoadDepartment();\n        })</script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
