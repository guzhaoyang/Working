#pragma checksum "F:\参与的项目\Working\Working\Views\MyWorks\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4b38906a9dd869ea3cf3198169422ebfdb7b312c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MyWorks_Index), @"mvc.1.0.view", @"/Views/MyWorks/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\参与的项目\Working\Working\Views\_ViewImports.cshtml"
using Working;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\参与的项目\Working\Working\Views\_ViewImports.cshtml"
using Working.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b38906a9dd869ea3cf3198169422ebfdb7b312c", @"/Views/MyWorks/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38f44a5eefebf09a29b5c8a0862c53dc29ae9dab", @"/Views/_ViewImports.cshtml")]
    public class Views_MyWorks_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("year in years"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("year.value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("month in months"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("month.value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "F:\参与的项目\Working\Working\Views\MyWorks\Index.cshtml"
   ViewData["Title"] = "我的工作记录"; 

#line default
#line hidden
#nullable disable
            DefineSection("css", async() => {
                WriteLiteral("\r\n    <style>\r\n        [v-cloak] {\r\n            display: none;\r\n        }\r\n    </style>\r\n");
            }
            );
            WriteLiteral("\r\n<h2>我的工作记录</h2>\r\n<div class=\"row\">\r\n\r\n    <div class=\"col-md-3\">\r\n        <select id=\"yearselect\" v-cloak class=\"form-control\" v-model=\"selected\" v-on:change=\"ChangeYear\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4b38906a9dd869ea3cf3198169422ebfdb7b312c5029", async() => {
                WriteLiteral("{{year.name}}");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </select>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <select id=\"monthselect\" v-cloak class=\"form-control\" v-model=\"selected\" v-on:change=\"ChangeMonth\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4b38906a9dd869ea3cf3198169422ebfdb7b312c6358", async() => {
                WriteLiteral("{{month.name}}");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </select>
    </div>
    <div class=""col-md-6"">

    </div>
</div>
<hr style=""border-color:#cccccc;"" />
<div class=""row"">
    <table class=""table table-striped table-hover"">
        <thead>
            <tr>
                <th style=""width:125px;"">日期</th>
                <th>工作记录</th>
                <th>备注</th>
                <th style=""width:50px"">操作</th>
            </tr>
        </thead>
        <tbody id=""workitemtr""></tbody>
    </table>
</div>

<!--编辑工作记录弹出框-->
<div class=""modal fade"" id=""editworkitem"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"" id=""newworkitem"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">
                    &times;
                </button>
                <h4 class=""modal-title"" id=""myMod"">
                    编号工作记录
                </h4>
            </di");
            WriteLiteral(@"v>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <textarea rows=""6"" class=""form-control"" v-model=""workitem.workcontent"" placeholder=""工作记录内容""></textarea>
                    </div>
                </div>
                <div class=""row"" style=""margin-top:5px;"">
                    <div class=""col-md-12"">
                        <textarea rows=""4"" class=""form-control"" v-model=""workitem.memos"" placeholder=""备注""></textarea>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success btn-sm"" data-dismiss=""modal"" v-on:click=""savaWorkItem"">
                    保存
                </button>
                <button type=""button"" class=""btn btn-danger btn-sm"" data-dismiss=""modal"">
                    取消
                </button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- ");
            WriteLiteral("/.modal -->\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/x-template"" id=""mywork-tr"">
        <tr v-bind:id=""workitem.recorddate"">
            <td>{{workitem.recorddate}}</td>
            <td>{{workitem.workcontent}}</td>
            <td>{{workitem.memos}}</td>
            <td>
                <button class=""btn btn-success btn-xs"" v-on:click=""editClick"">编辑</button>
            </td>
        </tr>
    </script>
    <script>$(function () {

            var today = new Date();
            var year = today.getFullYear();
            var month = today.getMonth() + 1;

            LoadYear(year);
            LoadMonth(month);
            QueryWorkItems(year, month);
        })

        var yearVue, monthVue;
        //加载年
        function LoadYear(year) {
            yearVue = new Vue({
                el: ""#yearselect"",
                data: {
                    selected: year,
                    years: [
                        { name: '2017年', value: '2017' },
                        { name: '2018年', value: '2");
                WriteLiteral(@"018' },
                        { name: '2019年', value: '2019' },
                        { name: '2020年', value: '2020' },
                        { name: '2021年', value: '2021' },
                        { name: '2022年', value: '2022' },
                        { name: '2023年', value: '2023' }
                    ]
                },
                methods: {
                    ChangeYear: function () {
                        QueryWorkItems(this.selected, monthVue.selected)

                    }
                }

            })

        }
        //加载月
        function LoadMonth(month) {
            if (month < 10) {
                month = ""0"" + month
            } else {
                month = """" + month
            }
            
            monthVue = new Vue({
                el: ""#monthselect"",
                data: {
                    selected: month,
                    months: [
                        { name: '01月', value: '01' },
                        { n");
                WriteLiteral(@"ame: '02月', value: '02' },
                        { name: '03月', value: '03' },
                        { name: '04月', value: '04' },
                        { name: '05月', value: '05' },
                        { name: '06月', value: '06' },
                        { name: '07月', value: '07' },
                        { name: '08月', value: '08' },
                        { name: '09月', value: '09' },
                        { name: '10月', value: '10' },
                        { name: '11月', value: '11' },
                        { name: '12月', value: '12' },
                    ]
                },
                methods: {
                    ChangeMonth: function () {
                        QueryWorkItems(yearVue.selected, this.selected)
                    }
                }

            })

        }

        //tr组件
        Vue.component(""mywork-row"", {
            props: [""workitem""],
            template: ""#mywork-tr"",
            methods: {
                editClick: fu");
                WriteLiteral(@"nction () {
                    this.$emit(""editworkitem"", this.workitem);
                }
            }

        })
        //查询当月数据
        function QueryWorkItems(year, month) {
            $(""#workitemtr"").html('<tr is=""mywork-row"" v-for=""workitem in workitems"" v-on:editworkitem=""editworkitem"" v-bind:workitem=""workitem""></tr>');
            $.ajax({
                type: ""GET"",
                url: ""/MyWorks/querymywork"",
                data: {
                    year: year,
                    month: month
                },
                success: function (backData) {
                    if (backData.result == 1) {
                        new Vue({
                            el: ""#workitemtr"",
                            data: {
                                workitems: backData.data
                            },
                            methods: {
                                editworkitem: function (workitem) {
                                    WorkItemEdit(wor");
                WriteLiteral(@"kitem);
                                }
                            }

                        });
                        SetTodayColor()

                    } else {

                        alert(backData.message)
                    }

                },
                error: function (error) {
                    alert(error.statusText);
                }

            })
        }

        var editVue = null;
        //编辑工作项
        function WorkItemEdit(workitem) {
            if (editVue == null) {
                editVue = new Vue({
                    el: ""#newworkitem"",
                    data: {
                        workitem: workitem
                    },
                    methods: {
                        savaWorkItem: function () {
                            EditSavaWorkItem(this.workitem);
                        }
                    }
                })

            } else {
                editVue.workitem = workitem;
            }
        ");
                WriteLiteral(@"    $(""#editworkitem"").modal(""show"")
        }
        function EditSavaWorkItem(workitem) {
            $.ajax({
                method: 'POST',
                url: '/MyWorks/addworkitem',
                data: {
                    workitem: workitem
                },
                success: function (backData) {
                    if (backData.result == 1) {

                        window.location=""/myworks/Index""
                    } else {
                        alert(backData.message);
                    }
                },
                error: function (error) {
                    alert(error.statusText);

                }
            })
        }
        function SetTodayColor() {
            var date = new Date();
            var month = date.getMonth() + 1;
            var strDate = date.getDate();
            if (month >= 1 && month <= 9) {
                month = ""0"" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                s");
                WriteLiteral("trDate = \"0\" + strDate;\r\n            }\r\n            var currentdate = date.getFullYear() + \"年\" + month + \"月\" + strDate + \"日\"\r\n            $(\"#\" + currentdate).attr(\"style\", \"background-color:lightgreen\");\r\n        }</script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
